'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _require = require('./constants'),
    scale = _require.scale;

var REG = /^[mp][trbl]?$/;

module.exports = function (props) {
  var style = {};

  for (var key in props) {
    if (!REG.test(key)) continue;
    var val = props[key];
    var property = getProperty(key);
  }

  return style;
};

var x = function x(scale) {
  return function (n) {
    return typeof n === 'number' ? scale[n] || n : n;
  };
};

var getProperty = function getProperty(key) {
  var _key = _slicedToArray(key, 2),
      a = _key[0],
      b = _key[1];

  var prop = properties[a];
  var dir = directions[b];
  return prop + dir;
};

var properties = {
  m: 'margin',
  p: 'padding'
};

var directions = {
  t: 'Top',
  r: 'Right',
  b: 'Bottom',
  l: 'Left'
};