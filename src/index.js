import React from 'react'
import tags from 'html-tags'
import styled from 'styled-components'
import {
  space,
  color,
  display,
  minWidth,
  minHeight,
  width,
  height,
  flex,
  order,
  flexWrap,
  flexDirection,
  flexBasis,
  alignItems,
  alignContent,
  alignSelf,
  justifyItems,
  justifyContent,
  justifySelf,
  gridGap,
  gridColumnGap,
  gridRowGap,
  gridColumn,
  gridRow,
  gridAutoFlow,
  gridAutoColumns,
  gridAutoRows,
  gridTemplateColumns,
  gridTemplateRows,
  gridTemplateAreas,
  gridArea,
  fontSize,
  fontFamily,
  fontWeight,
  fontStyle,
  textAlign,
  lineHeight,
  letterSpacing,
  borders,
  borderTop,
  borderRight,
  borderBottom,
  borderLeft,
  borderColor,
  borderRadius,
  buttonStyle,
  boxShadow,
  backgroundImage,
  backgroundSize,
  backgroundPosition,
  backgroundRepeat,
  opacity,
  overflow,
  position,
  top,
  right,
  bottom,
  left
} from 'styled-system'

const themed = key => props => props.theme[key]

const El = styled('div')(
  space,
  color,
  display,
  minWidth,
  minHeight,
  width,
  height,
  flex,
  order,
  flexWrap,
  flexDirection,
  flexBasis,
  alignItems,
  alignContent,
  alignSelf,
  justifyItems,
  justifyContent,
  justifySelf,
  fontSize,
  fontFamily,
  fontWeight,
  fontStyle,
  textAlign,
  lineHeight,
  letterSpacing,
  borders,
  borderTop,
  borderRight,
  borderBottom,
  borderLeft,
  borderColor,
  borderRadius,
  buttonStyle,
  boxShadow,
  backgroundImage,
  backgroundSize,
  backgroundPosition,
  backgroundRepeat,
  opacity,
  overflow,
  position,
  top,
  right,
  bottom,
  left,
  themed('El')
)

El.propTypes = {
  ...space.propTypes,
	...color.propTypes,
	...display.propTypes,
	...minWidth.propTypes,
	...minHeight.propTypes,
	...width.propTypes,
	...height.propTypes,
	...flex.propTypes,
	...order.propTypes,
	...flexWrap.propTypes,
	...flexDirection.propTypes,
	...flexBasis.propTypes,
	...alignItems.propTypes,
	...alignContent.propTypes,
	...alignSelf.propTypes,
	...justifyItems.propTypes,
	...justifyContent.propTypes,
	...justifySelf.propTypes,
	...fontSize.propTypes,
	...fontFamily.propTypes,
	...fontWeight.propTypes,
	...fontStyle.propTypes,
	...textAlign.propTypes,
	...lineHeight.propTypes,
	...letterSpacing.propTypes,
	...borders.propTypes,
	...borderTop.propTypes,
	...borderRight.propTypes,
	...borderBottom.propTypes,
	...borderLeft.propTypes,
	...borderColor.propTypes,
	...borderRadius.propTypes,
	...buttonStyle.propTypes,
	...boxShadow.propTypes,
	...backgroundImage.propTypes,
	...backgroundSize.propTypes,
	...backgroundPosition.propTypes,
	...backgroundRepeat.propTypes,
	...opacity.propTypes,
	...overflow.propTypes,
	...position.propTypes,
	...top.propTypes,
	...right.propTypes,
	...bottom.propTypes,
	...left.propTypes
}

tags.forEach(tag => {
  module.exports[tag.charAt(0).toUpperCase() + tag.slice(1)] = props => <El as={tag} {...props} />
})

module.exports['Text'] = props => <El as="p" m={0} {...props} />
module.exports['Image'] = props => <El as="img" {...props} />
module.exports['UL'] = props => <El as="ul" {...props} />
module.exports['OL'] = props => <El as="ol" {...props} />
module.exports['LI'] = props => <El as="li" {...props} />
module.exports['DL'] = props => <El as="dl" {...props} />
module.exports['DT'] = props => <El as="dt" {...props} />
module.exports['THead'] = props => <El as="thead" {...props} />
module.exports['TBody'] = props => <El as="tbody" {...props} />
module.exports['TH'] = props => <El as="th" {...props} />
module.exports['TR'] = props => <El as="tr" {...props} />
module.exports['TD'] = props => <El as="td" {...props} />
module.exports['TextArea'] = props => <El as="textarea" {...props} />
module.exports['FigCaption'] = props => <El as="figcaption" {...props} />